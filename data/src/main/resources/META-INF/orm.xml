<?xml version="1.0" encoding="UTF-8" ?>
<!--
    Copyright (C) Jari Ojala (jari.ojala@iki.fi).
-->
<entity-mappings xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence/orm
        http://xmlns.jcp.org/xml/ns/persistence/orm_2_1.xsd" version="2.1">

    <!--
        Note about the declaration order: one would assume, that the tables
        for the below declared entities would be created in declaration order?
        Wrooong! They're created in the alphaphetical order by the table
        name to be created. While this is ok, if you have no dependencies
        between the tables, it is not ok if you have. Because of this, I had
        to change the naming scheme so that the table that must be created
        after the others, is also named so that it is last in alphapethic
        order!

        (this might be specific to hibernate only).
    -->

    <entity class="org.gemini.results.model.Competition"
            name="Competition">
        <table name="A_COMPETITION"/>

        <named-query name="Competition.list">
            <query>SELECT c FROM Competition c ORDER BY time</query>
        </named-query>

        <convert converter="org.gemini.results.data.XMLGregorianCalendarConverter"
                attribute-name="time"/>

        <attributes>
            <id name="id"></id>

            <!-- These fields are used only in exported XML format - not
                 really realized in the database model. -->
            <transient name="groups"/>
            <transient name="classes"/>
            <transient name="competitors"/>
        </attributes>
    </entity>

    <entity class="org.gemini.results.model.Group" name="Group">
        <table name="B_GROUP"/>

        <named-query name="Group.list">
            <query>
                SELECT g FROM Group g WHERE competitionId=?1 ORDER BY offset
            </query>
        </named-query>

        <attributes>
            <id name="id"></id>
            <basic name="competitionId">
                <column column-definition="
                    VARCHAR(255)
                        NOT NULL CONSTRAINT group_competitionId_fk
                        FOREIGN KEY REFERENCES PUBLIC.A_COMPETITION(id)
                        ON DELETE CASCADE"/>
            </basic>
        </attributes>
    </entity>

    <entity class="org.gemini.results.model.Clazz" name="Clazz">
        <table name="C_CLASS"></table>

        <named-query name="Clazz.list">
            <query>
                SELECT c FROM Clazz c WHERE competitionId=?1 ORDER BY name
            </query>
        </named-query>

        <named-query name="Clazz.listByGroupId">
            <query>
                SELECT c FROM Clazz c
                    WHERE competitionId=?1 AND groupId=?2 ORDER BY name
            </query>
        </named-query>

        <named-query name="Clazz.listNames">
            <query>
                SELECT DISTINCT c.name FROM Clazz c ORDER BY name
            </query>
        </named-query>

        <attributes>
            <id name="id"></id>
            <basic name="competitionId">
                <column column-definition="
                    VARCHAR(255)
                        NOT NULL CONSTRAINT class_competitionId_fk
                        FOREIGN KEY REFERENCES PUBLIC.A_COMPETITION(id)
                        ON DELETE CASCADE"/>
            </basic>
            <basic name="groupId">
                <column column-definition="
                    VARCHAR(255) CONSTRAINT groupId_fk
                        FOREIGN KEY REFERENCES PUBLIC.B_GROUP(id)
                        ON DELETE SET NULL"/>
            </basic>
        </attributes>
    </entity>

    <entity class="org.gemini.results.model.Competitor" name="Competitor">
        <table name="D_COMPETITOR"></table>

        <named-query name="Competitor.list">
            <query>
                SELECT c FROM Competitor c
                    WHERE competitionId=?1 ORDER BY offset
            </query>
        </named-query>

        <named-query name="Competitor.listByClassId">
            <query>
                SELECT c FROM Competitor c
                    WHERE competitionId=?1 AND clazzId=?2 ORDER BY number
            </query>
        </named-query>

        <named-query name="Competitor.listNames">
            <query>
                SELECT DISTINCT c.name FROM Competitor c ORDER BY name
            </query>
        </named-query>

        <attributes>
            <id name="id"></id>
            <basic name="competitionId">
                <column column-definition="
                    VARCHAR(255)
                        NOT NULL CONSTRAINT competitor_competitionId_fk
                        FOREIGN KEY REFERENCES PUBLIC.A_COMPETITION(id)
                        ON DELETE CASCADE"/>
            </basic>
            <basic name="clazzId">
                <column column-definition="
                    VARCHAR(255) CONSTRAINT clazzId_fk
                        FOREIGN KEY REFERENCES PUBLIC.C_CLASS(id)
                        ON DELETE SET NULL"/>
            </basic>
        </attributes>
    </entity>

</entity-mappings>
